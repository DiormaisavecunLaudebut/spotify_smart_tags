var trackId = "<%= @id %>"
var name = "<%= @name %>"
var artist = "<%= @artist %>"
var href = "<%= @href %>"
var coverUrl = "<%= @cover %>"
var tags = "<%= @tags %>".split('$$')

var addTagOption = document.getElementById('add-tag');
var removeTagOption = document.getElementById('remove-tag');
var modal = document.querySelector('.track-modal');
var trackName = document.querySelector('.track-name');
var trackArtist = document.querySelector('.track-artist');
var trackCover = document.querySelector('.track-cover');
var trackHref = document.getElementById('tag-href');
var closeIcon = document.querySelector('.close-icon');
var tagsContainer = document.querySelector('.tags-container');
var deleteTagsContainer = document.querySelector('.delete-tags-container');

function displayDeleteTags() {
  removeTagOption.classList.add('tags-shown');
  removeTagOption.style.marginBottom = "8px"
  removeTagOption.classList.remove('mbt')
  deleteTagsContainer.classList.add('mbt')

  var badges = Array.from(tagsContainer.children).map(e => `
    <form action="/tracks/${trackId}/remove-tag" method="post" data-remote="true" id="tag-${e.innerText}">
      <input type="hidden" name="tag" id="${e.innerText}" value="${e.innerText}">
      <button type="submit" class="mtag">${e.innerText.toLowerCase()}</button>
    </form>
  `).join('')
  deleteTagsContainer.insertAdjacentHTML('afterbegin', badges)
}

function removeDeleteTags() {
  var deleteTagsContainer = document.querySelector('.delete-tags-container');
  removeTagOption.style.marginBottom = ""
  removeTagOption.classList.add('mbt')
  deleteTagsContainer.classList.remove('mbt')
  removeTagOption.classList.remove('tags-shown');

  Array.from(deleteTagsContainer.children).forEach(e => e.remove());
}

function playOption() {
  if (removeTagOption.classList.value.includes('tags-shown')) {
    removeDeleteTags();
  } else {
    displayDeleteTags();
  }
}

function resetModalDetails() {
  var badgeContainer = document.querySelector('.badge-container');
  var searchbar = document.querySelector('.msearch')

  if (!addTagOption.classList.value.includes('mbt')) {
    addTagOption.classList.add('mbt')
    badgeContainer.remove()
  }

  addTagOption.dataset.suggestions = ""
  removeTagOption.style.marginBottom = ""
  removeTagOption.classList.remove('tags-shown')
  addTagOption.classList.remove('row-open')
  modal.style.transform = ""
  trackName.innerText = ""
  trackArtist.innerText = ""
  trackCover.src = ""
  trackHref.href = ""
  modal.dataset.trackId = ""

  Array.from(deleteTagsContainer.children).forEach(e => e.remove())
  Array.from(tagsContainer.children).forEach(e => e.remove())
  if (searchbar) searchbar.remove()
  if (badgeContainer) Array.from(badgeContainer.children).forEach(e => e.remove())
}

function closeTrackModal() {
  resetModalDetails();
  setTimeout(function dnone() { modal.classList.add('d-none') }, 300)
  enableScroll();

  closeIcon.removeEventListener('click', closeTrackModal)
  removeTagOption.removeEventListener('click', playOption)
}

function addTrackDetails() {
  var badges = tags.map(e => `<div class="mtag-small tag-primary mr-1 mb-1">${e}</div>`).join('')

  if (!window.location.href.match('playlist')) covers.forEach(cover => cover.style.zIndex = 0)
  modal.dataset.trackId = trackId
  addTagOption.href = `/tracks/${trackId}/napster`
  trackName.innerText = name
  trackArtist.innerText = artist
  trackCover.src = coverUrl
  trackHref.href = href

  if (tags[0] != "") tagsContainer.insertAdjacentHTML('afterbegin', badges)
}

function displayTrackModal() {
  addTrackDetails();
  modal.classList.remove('d-none');
  modal.style.transform = `translate(0, -${modal.offsetTop - window.scrollY}px`;
  disableScroll();
  closeIcon.addEventListener('click', closeTrackModal)
  removeTagOption.addEventListener('click', playOption)
}

displayTrackModal();
